{"version":3,"sources":["components/pages/StorePicker.js","components/atoms/Button.js","components/atoms/Counters.js","components/organisms/FishCard.js","components/templates/FishMarket.js","components/atoms/CartItem.js","components/templates/Cart.js","components/atoms/InputFile.js","components/molecules/Dropdown.js","components/organisms/FishForm.js","components/templates/Inventory.js","components/pages/FishStore.js","components/pages/StyleGuide.js","components/pages/PageNotFound.js","App.js","index.js"],"names":["StorePicker","props","useState","storeName","setStorename","error","setError","className","type","value","onChange","e","target","placeholder","onKeyDown","keyCode","length","history","push","handleLogInOnEnter","src","alt","onClick","Button","text","styleClasses","preventDefault","Counters","status","quantity","decreaseQuantity","increaseQuantity","FishCard","setQuantity","orderError","setOrderError","inventoryData","Number","price","toFixed","imagePath","name","description","handleOrder","id","FishMarket","noDataError","storeData","inventory","map","data","index","key","CartItem","cartData","Cart","cart","total","forEach","item","totalPrice","InputFile","fileName","handleFileChange","Dropdown","listOpen","setListOpen","title","headerTitle","setHeaderTitle","list","close","useEffect","setTimeout","window","addEventListener","removeEventListener","listClass","cursorClass","listWidth","width","onSelectItem","FishForm","setName","setPrice","setDescription","setStatus","setFileName","handleChange","fieldName","persist","htmlFor","options","fieldValue","rows","files","isNewFish","saveFish","removeNewFish","removeFish","Inventory","fold","setFold","newFish","setNewFish","setIsNewFish","unfold","logout","onClickLoadFishes","newFishData","updateInventory","FishStore","setStoreData","setNoDataError","updateStoreData","newInventory","newCart","fishes","Object","assign","cartItems","newStoreData","updatedFishes","updatedCart","cartItem","cartPresent","goBack","orderElement","document","querySelector","cartElement","inventoryElement","homeElement","order","offsetWidth","style","transform","classList","add","remove","val","i","newId","String","splice","StyleGuide","sample","setSample","PageNotFound","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7686a8a7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n/**\r\n * @function\r\n * @desc Store Picker Component\r\n * @param {object} props \r\n*/\r\nconst StorePicker = (props) => {\r\n    const [storeName, setStorename] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle login on click of button\r\n    */\r\n    const handleLogInOnClick = () => {\r\n        if (storeName.length > 0) {\r\n            setError(false);\r\n            props.history.push(`/store/${storeName}`);\r\n        }\r\n        else {\r\n            setError(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle login on press of enter \r\n     * @param {object} e \r\n    */\r\n    const handleLogInOnEnter = (e) => {\r\n        if (e.keyCode === 13) {\r\n            if (storeName.length > 0) {\r\n                setError(false);\r\n                props.history.push(`/store/${storeName}`);\r\n            }\r\n            else {\r\n                setError(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='flex justify-center items-center min-h-screen store-bg'>\r\n            <div className='w-1/3 flex flex-wrap flex-col justify-center items-center rounded-large border border-gray-800 bg-gray-200 px-4 py-6'>\r\n                <h2 className='text-2xl uppercase font-medium mb-2'>please enter a store name</h2>\r\n                <label className='mb-3 w-2/3'>\r\n                    <input\r\n                        type='text'\r\n                        value={storeName}\r\n                        onChange={(e) => setStorename(e.target.value)}\r\n                        placeholder='STORE NAME'\r\n                        className='border rounded-large px-6 py-3 w-full focus:outline-none'\r\n                        onKeyDown={(e) => handleLogInOnEnter(e)}\r\n                    />\r\n                </label>\r\n                <span className={`${error ? '' : 'hidden'} text-red-600 text-left mb-3`}>Please enter the store name</span>\r\n                <img\r\n                    src='../assets/images/next.png'\r\n                    alt='next'\r\n                    className='cursor-pointer w-10'\r\n                    onClick={() => handleLogInOnClick()}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\n\r\n/**\r\n * @function\r\n * @desc Reusable Button Component\r\n * @param {object} props \r\n*/\r\nconst Button = (props) => {\r\n    const { text, styleClasses } = props;\r\n\r\n    /**\r\n     * @function\r\n     * @desc handles the button click\r\n     * @param {object} e \r\n    */\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        props.onClick && props.onClick(e);\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className={`font-medium py-1 px-5 rounded-full uppercase cursor-pointer text-white focus:outline-none ${styleClasses}`}\r\n            type=\"button\"\r\n            onClick={handleClick}\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\n/**\r\n * @function\r\n * @desc Reusable Counter Component\r\n * @param {object} props \r\n*/\r\nconst Counters = (props) => {\r\n    return (\r\n        <div className='flex items-center'>\r\n            <span\r\n                className={`${props.status === 'sold out' ? 'cursor-not-allowed' : 'cursor-pointer'} ${props.quantity === 0 ? 'cursor-not-allowed' : ''} flaticon-minus focus:outline-none font-bold`}\r\n                onClick={(e) => props.decreaseQuantity(e)}>\r\n            </span>\r\n            <p className='text-2xl px-5 font-proxima-nova font-bold'>{props.quantity}</p>\r\n            <span\r\n                className={`${props.status === 'sold out' ? 'cursor-not-allowed' : 'cursor-pointer'} flaticon-add focus:outline-none font-bold`}\r\n                onClick={(e) => props.increaseQuantity(e)}>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counters;","import React, { useState } from 'react';\r\n\r\nimport Button from '../atoms/Button';\r\nimport Counters from '../atoms/Counters';\r\n\r\n/**\r\n * @function\r\n * @desc Reusable Fish Card Component\r\n * @param {object} props \r\n*/\r\nconst FishCard = (props) => {\r\n    const [quantity, setQuantity] = useState(0);\r\n    const [orderError, setOrderError] = useState(false);\r\n\r\n    /**\r\n     * @function\r\n     * @desc increase the quantity on click of plus icon\r\n    */\r\n    const increaseQuantity = () => {\r\n        if (props.inventoryData.status === 'sold out') {\r\n            return;\r\n        }\r\n        setQuantity(quantity + 1);\r\n        setOrderError(false);\r\n    }\r\n\r\n    /**\r\n    * @function\r\n    * @desc decrease the quantity on click of minus icon\r\n   */\r\n    const decreaseQuantity = () => {\r\n        if (props.inventoryData.status === 'sold out') {\r\n            return;\r\n        }\r\n        if (quantity === 0) {\r\n            return;\r\n        } else {\r\n            setQuantity(quantity - 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @function\r\n    * @desc handle order on click of order button\r\n   */\r\n    const handleOrder = () => {\r\n        if (props.inventoryData.status === 'sold out') {\r\n            return;\r\n        }\r\n        if (quantity > 0) {\r\n            if (props.handleOrder) {\r\n                props.handleOrder(props.inventoryData.id, quantity);\r\n                setQuantity(0);\r\n            }\r\n        }\r\n        else {\r\n            setOrderError(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`mb-3 mt-12 rounded-large border ${props.inventoryData && props.inventoryData.status === 'sold out' ? 'sold-out-bg' : ''}`}>\r\n            <div className={`p-2 ${props.inventoryData && props.inventoryData.status === 'sold out' ? 'opacity-25 cursor-not-allowed' : ''}`}>\r\n                <div className='relative'>\r\n                    <img src='../assets/images/fish-icon.png' alt='fish' className='fish-position' />\r\n                    <p className='text-position text-white text-sm font-bold font-proxima-nova-alt'>${Number(props.inventoryData && props.inventoryData.price).toFixed(2)}</p>\r\n                </div>\r\n                <div className='flex'>\r\n                    <img src={`../assets/images/${props.inventoryData && props.inventoryData.imagePath}`} alt='fish' className='w-40 h-40 z-no rounded-large border-2 border-dotted border-black' />\r\n                    <div className='w-full flex flex-col justify-between px-3 px-3'>\r\n                        <div className=''>\r\n                            <h3 className='font-carrinady font-bold uppercase text-4xl break-all'>{props.inventoryData && props.inventoryData.name}</h3>\r\n                            <p className='font-proxima-nova font-medium text-lg'>{props.inventoryData && props.inventoryData.description}</p>\r\n                        </div>\r\n                        <div className='flex justify-end items-center'>\r\n                            {orderError && <p className='text-red-600 text-sm font-medium pr-4'>Please increase the quantity.</p>}\r\n                            <Counters\r\n                                quantity={quantity}\r\n                                increaseQuantity={increaseQuantity}\r\n                                decreaseQuantity={decreaseQuantity}\r\n                                status={props.inventoryData && props.inventoryData.status}\r\n                            />\r\n                            <Button\r\n                                text='order'\r\n                                styleClasses={`bg-black text-lg ml-4 font-proxima-nova-alt ${props.inventoryData && props.inventoryData.status === 'sold out' ? 'cursor-not-allowed' : ''}`}\r\n                                onClick={() => handleOrder()}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FishCard;","import React from 'react';\r\n\r\nimport FishCard from '../organisms/FishCard';\r\n\r\n/**\r\n * @function\r\n * @desc Fish Market Component\r\n * @param {object} props \r\n*/\r\nconst FishMarket = (props) => {\r\n    return (\r\n        <div className='px-3 py-5'>\r\n            <div className='font-archistico-bold'>\r\n                <h1 className='flex justify-center uppercase text-7xl text-theme-red leading-tight'>\r\n                    fish\r\n                    <span className='flex justify-center items-center w-32 uppercase text-3xl px-4 text-green-500 text-center'>of the</span>\r\n                    day\r\n                </h1>\r\n                <h2 className='uppercase text-xl font-phosphate-inline text-center tracking-huge'>\r\n                    <span className='flaticon-fish mirror mr-3'></span>\r\n                    a fresh seafood market\r\n                    <span className='flaticon-fish'></span>\r\n                </h2>\r\n            </div>\r\n            <h3 className={`text-lg text-center font-bold text-red-600 mt-4 ${props.noDataError ? '' : 'hidden'}`}>No data in the market, please add data...</h3>\r\n            {props.storeData &&\r\n                props.storeData.inventory &&\r\n                props.storeData.inventory.map((data, index) =>\r\n                    <FishCard\r\n                        inventoryData={data}\r\n                        key={index}\r\n                        handleOrder={(id, quantity) => props.handleOrder(id, quantity)}\r\n                    />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FishMarket;","import React from 'react';\r\n\r\n/**\r\n * @function\r\n * @desc Reusable Cart Item\r\n * @param {object} props \r\n*/\r\nconst CartItem = (props) => {\r\n    return (\r\n        <>\r\n            {props.cartData.name &&\r\n                <div className='border-b border-dotted border-gray-400 py-2 font-proxima-nova'>\r\n                    <div className='flex justify-between items-center'>\r\n                        <div className='flex flex-col'>\r\n                            <p className='capitalize font-medium text-base'>{props.cartData.name}</p>\r\n                            <p className='font-medium text-base'>( {props.cartData.quantity} {props.cartData.quantity > 1 ? 'pounds' : 'pound'} )</p>\r\n                        </div>\r\n                        <p className='font-bold text-base'>${Number(props.cartData.price).toFixed(2)}</p>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartItem;","import React from 'react';\r\n\r\nimport CartItem from '../atoms/CartItem';\r\n\r\n/**\r\n * @function\r\n * @desc Cart Component\r\n * @param {object} props \r\n*/\r\nconst Cart = (props) => {\r\n    /**\r\n    * @function\r\n    * @description Calculate total amount of the Cart.\r\n    */\r\n    const totalPrice = () => {\r\n        let total = 0;\r\n        if (props.storeData.cart && props.storeData.cart.length !== 0) {\r\n            props.storeData.cart.forEach((item) => {\r\n                total = total + Number(item.price);\r\n            });\r\n        }\r\n        return total.toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <div className='px-3 pt-5'>\r\n            <div className='border-theme-red border-b-2 pb-5 mb-5'>\r\n                <h1 className='uppercase text-2xl font-phosphate-inline text-center'>\r\n                    <span className='flaticon-fish mirror mr-5'></span>\r\n                    cart\r\n                    <span className='flaticon-shopping-cart ml-5'></span>\r\n                </h1>\r\n            </div>\r\n            <h3 className={`text-lg text-center font-bold text-red-600 mt-4 ${props.noDataError ? '' : 'hidden'}`}>No data in the cart, please add data...</h3>\r\n            <div className='min-height'>\r\n                {props.storeData && props.storeData.cart && props.storeData.cart.map((data, index) =>\r\n                    <CartItem cartData={data} key={index} />)\r\n                }\r\n            </div>\r\n            <div className='flex justify-between border-theme-red border-t-2 py-3'>\r\n                <p className='uppercase text-2xl font-proxima-nova font-bold'>total</p>\r\n                <p className='text-2xl'>${totalPrice()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\n\r\n/**\r\n * @function\r\n * @desc Reusable Input file Component\r\n * @param {object} props \r\n*/\r\nconst InputFile = (props) => {\r\n    return (\r\n        <label className='flex items-center cursor-pointer'>\r\n            <span className='flaticon-image text-theme-blue mr-3'></span>\r\n            <p className={`text-sm ${props.fileName && props.fileName.length ? '' : 'text-gray-500'}`}>{props.fileName ? props.fileName : 'IMAGE PATH'}</p>\r\n            <input type=\"file\" className='hidden' onChange={(e) => props.handleFileChange(e)} />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default InputFile;","import React, { useState, useEffect } from 'react'\r\n\r\n/**\r\n * @function\r\n * @desc Reusable Dropdown Component\r\n * @param {object} props \r\n*/\r\nconst Dropdown = (props) => {\r\n    const [listOpen, setListOpen] = useState(false);\r\n    const [headerTitle, setHeaderTitle] = useState(props.title);\r\n\r\n    const { list } = props;\r\n\r\n    /**\r\n     * @function\r\n     * @desc closes the dropdown on clicking the body\r\n    */\r\n    const close = () => {\r\n        setListOpen(false);\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc selects an items on click\r\n     * @param {string} title \r\n    */\r\n    const selectItem = (title) => {\r\n        setHeaderTitle(title);\r\n        setListOpen(false);\r\n        props.onSelectItem && props.onSelectItem(title);\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc toggles the dropdown\r\n    */\r\n    const toggleList = () => {\r\n        if (list && list.length) {\r\n            setListOpen(!listOpen);\r\n        }\r\n    }\r\n\r\n    //update selected item\r\n    useEffect(() => {\r\n        setListOpen(false);\r\n        if (props.value) {\r\n            setHeaderTitle(props.value);\r\n        } else {\r\n            setHeaderTitle(props.title);\r\n        }\r\n    }, [props.list, props.title, props.value]);\r\n\r\n    //close the dropdown on clicking outside the dropdown menu\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (listOpen) {\r\n                window.addEventListener('click', close)\r\n            }\r\n            else {\r\n                window.removeEventListener('click', close)\r\n            }\r\n        }, 0);\r\n        return () => {\r\n            window.removeEventListener('click', close)\r\n        }\r\n    }, [listOpen]);\r\n\r\n    const listClass = listOpen ? 'flaticon-chevron-upwards-arrow' : 'flaticon-down-chevron';\r\n    const cursorClass = (list && list.length) ? 'cursor-pointer' : 'cursor-not-allowed';\r\n\r\n    return (\r\n        <div className=\"relative\">\r\n            <div className={`dropdown inline-flex ${cursorClass}`} onClick={() => toggleList()}>\r\n                <div className={`${props.listWidth} flex items-center justify-between border border-black bg-white border rounded-lg px-3`}>\r\n                    {list && list.length\r\n                        ?\r\n                        <p className=\"uppercase text-sm font-sans\">\r\n                            {headerTitle}\r\n                        </p>\r\n                        :\r\n                        <p className=\"capitalize text-sm font-sans text-light-gray\">\r\n                            no data available\r\n                        </p>\r\n                    }\r\n                    <span className={`${listClass} text-theme-blue`}></span>\r\n                </div>\r\n            </div>\r\n            {listOpen &&\r\n                <ul className={`${props.width} dropdown-content absolute border border-black rounded bg-white z-40`}>\r\n                    {list && list.map((item, index) => (\r\n                        <li className=\"uppercase text-left px-3 text-sm font-sans py-1 hover:bg-blue-200 cursor-pointer\"\r\n                            key={index}\r\n                            onClick={() => selectItem(item)}\r\n                        >\r\n                            {item}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Button from '../atoms/Button';\r\nimport InputFile from '../atoms/InputFile';\r\n\r\nimport Dropdown from '../molecules/Dropdown';\r\n\r\n/**\r\n * @function\r\n * @desc Reusable Fish Form Component\r\n * @param {object} props \r\n*/\r\nconst FishForm = (props) => {\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [fileName, setFileName] = useState('');\r\n\r\n    //update the states according to the props changes\r\n    useEffect(() => {\r\n        if (props.inventoryData) {\r\n            setName(props.inventoryData.name);\r\n            setPrice(props.inventoryData.price);\r\n            setDescription(props.inventoryData.description);\r\n            setStatus(props.inventoryData.status);\r\n            setFileName(props.inventoryData.imagePath);\r\n        } else {\r\n            setName('');\r\n            setPrice('');\r\n            setDescription('');\r\n            setStatus('');\r\n            setFileName('');\r\n        }\r\n    }, [props.inventoryData]);\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle input file change\r\n     * @param {object} e \r\n    */\r\n    const handleFileChange = (e) => {\r\n        setFileName(e.target.files[0].name);\r\n        props.handleChange && props.handleChange(e.target.files[0].name, 'file', props.inventoryData.id);\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle dropdown change\r\n     * @param {String} fieldValue\r\n     * @param {String} fieldName \r\n    */\r\n    const handleItemSelected = (fieldValue, fieldName) => {\r\n        if (fieldName === 'option') {\r\n            setStatus(fieldValue);\r\n        }\r\n        props.handleChange && props.handleChange(fieldValue, fieldName, props.inventoryData.id);\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle change all the input fields\r\n     * @param {object} e\r\n     * @param {String} fieldName \r\n    */\r\n    const handleChange = (e, fieldName) => {\r\n        e && e.persist && e.persist();\r\n        switch (fieldName) {\r\n            case 'name':\r\n                setName(e.target.value);\r\n                break;\r\n            case 'description':\r\n                setDescription(e.target.value);\r\n                break;\r\n            case 'price':\r\n                setPrice(e.target.value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        props.handleChange && props.handleChange(e, fieldName, props.inventoryData.id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span className={`text-red-600 text-sm font-bold ${props.error ? '' : 'hidden'}`}>Please enter all the details...</span>\r\n            <div className='border rounded-lg border-black mb-4'>\r\n                <div className='flex border-b border-black'>\r\n                    <div className='flex-grow px-2'>\r\n                        <label className='flex items-center h-full cursor-pointer' htmlFor='name'>\r\n                            <img src='../assets/images/map-fish-cleaning.png' alt='fish' className='mr-2 w-6' />\r\n                            <input type='text' placeholder='FISH NAME' value={name} className='bg-transparent focus:outline-none' onChange={(e) => handleChange(e, 'name')} />\r\n                        </label>\r\n                    </div>\r\n                    <div className='flex-grow border-l border-r border-black px-2'>\r\n                        <label className='flex items-center h-full cursor-pointer' htmlFor='price'>\r\n                            <span className='flaticon-dollar text-theme-blue'></span>\r\n                            <input type='number' placeholder='PRICE' value={price} className='bg-transparent focus:outline-none' onChange={(e) => handleChange(e, 'price')} />\r\n                        </label>\r\n                    </div>\r\n                    <div className='flex-grow ml-3 px-2 py-1'>\r\n                        <Dropdown\r\n                            value={status}\r\n                            title='Select Option'\r\n                            list={props.inventoryData && props.inventoryData.options}\r\n                            onSelectItem={(e) => { handleItemSelected(e, 'option') }}\r\n                            listWidth='w-40'\r\n                            width='w-32'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='p-2 border-b border-black'>\r\n                    <label className='flex items-center cursor-pointer' htmlFor='desc'>\r\n                        <span className='flaticon-google text-theme-blue mr-3'></span>\r\n                        <textarea rows='3' placeholder='DESCRIPTION' className='w-full bg-transparent focus:outline-none' value={description} onChange={(e) => handleChange(e, 'description')} />\r\n                    </label>\r\n                </div>\r\n                <div className='p-2 border-b border-black'>\r\n                    <InputFile\r\n                        fileName={fileName}\r\n                        handleFileChange={handleFileChange}\r\n                        value={fileName}\r\n                    />\r\n                </div>\r\n                {props.isNewFish ?\r\n                    (<div className='flex justify-around p-2 fish-hook-bg'>\r\n                        <Button\r\n                            text='save fish'\r\n                            styleClasses='bg-green-600 text-xs'\r\n                            onClick={() => props.saveFish()}\r\n                        />\r\n                        <Button\r\n                            text='remove fish'\r\n                            styleClasses='bg-red-600 text-xs as'\r\n                            onClick={() => props.removeNewFish()}\r\n                        />\r\n                    </div>) :\r\n                    (<div className='flex justify-center p-2 fish-hook-bg'>\r\n                        <Button\r\n                            text='remove fish'\r\n                            styleClasses='bg-red-600 text-xs'\r\n                            onClick={() => props.removeFish(props.inventoryData.id)}\r\n                        />\r\n                    </div>)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FishForm;","import React, { useState } from 'react';\r\n\r\nimport FishForm from '../organisms/FishForm';\r\n\r\n/**\r\n * @function\r\n * @desc Inventory Component\r\n * @param {object} props \r\n*/\r\nconst Inventory = (props) => {\r\n    const [fold, setFold] = useState(false);\r\n    const [newFish, setNewFish] = useState([]);\r\n    const [isNewFish, setIsNewFish] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle fold and unfold on click of fold and unfold buttons\r\n    */\r\n    const handleFold = () => {\r\n        setFold(!fold);\r\n        if (fold) {\r\n            props.unfold();\r\n        }\r\n        else {\r\n            props.fold();\r\n        }\r\n    }\r\n    /**\r\n     * @function\r\n     * @desc handle change of all the input fields\r\n     * @param {object} e\r\n     * @param {String} fieldName \r\n    */\r\n    const handleChange = (e, fieldName) => {\r\n        let newFishData = newFish;\r\n\r\n        switch (fieldName) {\r\n            case 'name':\r\n                newFishData[0].name = e.target.value;\r\n                break;\r\n            case 'description':\r\n                newFishData[0].description = e.target.value;\r\n                break;\r\n            case 'price':\r\n                newFishData[0].price = e.target.value;\r\n                break;\r\n            case 'option':\r\n                newFishData[0].status = e;\r\n                break;\r\n            case 'file':\r\n                newFishData[0].imagePath = e;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setNewFish(newFishData);\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle add fish \r\n    */\r\n    const addFish = () => {\r\n        let newFishData = [{\r\n            \"id\": '',\r\n            \"name\": '',\r\n            \"price\": '',\r\n            \"options\": ['fresh', 'sold out'],\r\n            \"status\": 'fresh',\r\n            \"description\": '',\r\n            \"imagePath\": ''\r\n        }];\r\n        setNewFish(newFishData);\r\n        setIsNewFish(true);\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle remove fish\r\n    */\r\n    const removeNewFish = () => {\r\n        setError(false);\r\n        setNewFish([]);\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle save fish by validating the input fields\r\n    */\r\n    const saveFish = () => {\r\n        let newFishData = newFish;\r\n\r\n        if (newFishData[0].name === '' && newFishData[0].price === '' && newFishData[0].description === '' && newFishData[0].imagePath === '') {\r\n            setError(true);\r\n        }\r\n        else {\r\n            setError(false);\r\n            props.updateInventory(newFishData);\r\n            setNewFish([]);\r\n            setIsNewFish(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='py-5'>\r\n            <div className='flex justify-between items-center'>\r\n                <div className='tile w-16' title={fold ? 'unfold' : 'fold'} onClick={() => handleFold()}></div>\r\n                <h1 className='uppercase text-2xl font-phosphate-inline text-center'>\r\n                    <span className='flaticon-fish mirror mr-5'></span>\r\n                    inventory\r\n                    <span className='flaticon-home ml-5'></span>\r\n                </h1>\r\n                <div className='tile-reverse w-20' title='logout' onClick={() => props.logout()}></div>\r\n            </div>\r\n            <div className='flex justify-between items-center border-theme-red border-t-2 mx-3 pt-6 mt-5'>\r\n                <div className='tile w-64 left-12' title='load sample fishes' onClick={() => props.onClickLoadFishes()}></div>\r\n                <div className='tile-reverse w-48 right-12' title='add fish' onClick={() => addFish()}></div>\r\n            </div>\r\n            <h3 className={`text-lg text-center font-bold text-red-600 mt-4 ${props.noDataError ? '' : 'hidden'}`}>No data in the inventory, please add data...</h3>\r\n            <div className='px-3 py-6'>\r\n                {isNewFish && newFish.length > 0 &&\r\n                    <FishForm\r\n                        isNewFish={isNewFish}\r\n                        inventoryData={newFish[0]}\r\n                        saveFish={saveFish}\r\n                        handleChange={(e, fieldValue) => handleChange(e, fieldValue)}\r\n                        removeNewFish={removeNewFish}\r\n                        error={error}\r\n                    />}\r\n\r\n                {props.storeData &&\r\n                    props.storeData.inventory &&\r\n                    props.storeData.inventory.map((data, index) =>\r\n                        <FishForm\r\n                            inventoryData={data}\r\n                            key={index}\r\n                            handleChange={(e, fieldValue, id) => props.handleChange(e, fieldValue, id)}\r\n                            removeFish={(id) => props.removeFish(id)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inventory;","import React, { useState, useEffect } from 'react';\r\n\r\nimport FishMarket from '../templates/FishMarket';\r\nimport Cart from '../templates/Cart';\r\nimport Inventory from '../templates/Inventory';\r\n\r\nimport data from '../../assets/data/StoreData.json';\r\n\r\n/**\r\n * @function\r\n * @desc Fish Store Component\r\n * @param {object} props \r\n*/\r\nconst FishStore = (props) => {\r\n    const [storeData, setStoreData] = useState([]);\r\n    const [noDataError, setNoDataError] = useState(false);\r\n\r\n    //update the no data validation message on change of storeData\r\n    useEffect(() => {\r\n        if (storeData && storeData.inventory && storeData.inventory.length === 0) {\r\n            setNoDataError(true);\r\n        } else {\r\n            setNoDataError(false);\r\n        }\r\n    }, [storeData]);\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle logout on click of logout button\r\n    */\r\n    const handleLogout = () => {\r\n        props.history.goBack()\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc reusable function to set the store data state\r\n     * @param {object} newInventory\r\n     * @param {object} newCart\r\n    */\r\n    const updateStoreData = (newInventory, newCart) => {\r\n        let fishes = { inventory: newInventory };\r\n        let inventory = Object.assign({}, fishes);\r\n\r\n        let cartItems = { cart: newCart };\r\n        let cart = Object.assign({}, cartItems);\r\n\r\n        let newStoreData = { ...inventory, ...cart };\r\n        setStoreData(newStoreData);\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle load store data on click of load sample fishes\r\n    */\r\n    const loadSampleData = () => {\r\n        if (storeData && storeData.inventory && storeData.inventory.length === 0) {\r\n            setNoDataError(true);\r\n        } else {\r\n            setStoreData(data);\r\n            setNoDataError(false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle order on click of order button and update the storedata\r\n     * @param {string} id\r\n     * @param {number} quantity\r\n    */\r\n    const handleOrder = (id, quantity) => {\r\n        let updatedFishes = storeData.inventory;\r\n        let updatedCart = storeData.cart;\r\n        let cartItem = {\r\n            id: id,\r\n            name: '',\r\n            quantity: quantity,\r\n            price: ''\r\n        }\r\n\r\n        updatedFishes.map(item => {\r\n            if (item.id === cartItem.id) {\r\n                cartItem.name = item.name;\r\n                cartItem.price = item.price * cartItem.quantity;\r\n            }\r\n            return updatedFishes;\r\n        });\r\n\r\n        if (updatedCart.length) {\r\n            let cartPresent = true;\r\n\r\n            updatedCart.map((item, index) => {\r\n                if (item.id === cartItem.id) {\r\n                    cartPresent = false;\r\n                    updatedCart[index].price = Number(cartItem.price) + Number(item.price);\r\n                    updatedCart[index].quantity = cartItem.quantity + item.quantity;\r\n                }\r\n                return updatedCart;\r\n            });\r\n\r\n            if (cartPresent) {\r\n                updatedCart = [cartItem, ...updatedCart];\r\n            }\r\n        } else {\r\n            updatedCart = [cartItem];\r\n        }\r\n        updateStoreData(updatedFishes, updatedCart);\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle fold of the page on click of fold button\r\n    */\r\n    const fold = () => {\r\n        let orderElement = document.querySelector('.order');\r\n        let cartElement = document.querySelector('.cart');\r\n        let inventoryElement = document.querySelector('.inventory');\r\n        let homeElement = document.querySelector('.home-bg');\r\n\r\n        let order = (orderElement.offsetWidth / 2) / 38;\r\n        let cart = (cartElement.offsetWidth / 2) / 38;\r\n\r\n        orderElement.style.transform = \"skewY(\" + cart + \"deg)\";\r\n        cartElement.style.transform = \"skewY(-\" + order + \"deg)\";\r\n        inventoryElement.style.transform = \"skewY(\" + cart + \"deg)\";\r\n\r\n        homeElement.classList.add('fold');\r\n        orderElement.classList.add('order-section-border');\r\n        inventoryElement.classList.add('inventory-section-border');\r\n        cartElement.classList.add('cart-section-border');\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle unfold of the page on click of unfold button\r\n    */\r\n    const unfold = () => {\r\n        let orderElement = document.querySelector('.order');\r\n        let cartElement = document.querySelector('.cart');\r\n        let inventoryElement = document.querySelector('.inventory');\r\n        let homeElement = document.querySelector('.home-bg');\r\n\r\n        orderElement.style.transform = 'none';\r\n        cartElement.style.transform = 'none';\r\n        inventoryElement.style.transform = 'none';\r\n\r\n        homeElement.classList.remove('fold');\r\n        orderElement.classList.remove('order-section-border');\r\n        inventoryElement.classList.remove('inventory-section-border');\r\n        cartElement.classList.remove('cart-section-border');\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle remove on click of remove fish button and update the storedata\r\n     * @param {string} id\r\n    */\r\n    const removeFish = (id) => {\r\n        let updatedFishes = storeData.inventory;\r\n        let updatedCart = storeData.cart;\r\n\r\n        updatedFishes.forEach((item, index) => {\r\n            if (item.id === id) {\r\n                updatedFishes.splice(index, 1);\r\n            }\r\n        });\r\n\r\n        updatedCart.forEach((item, index) => {\r\n            if (item.id === id) {\r\n                updatedCart.splice(index, 1);\r\n            }\r\n        });\r\n\r\n        updateStoreData(updatedFishes, updatedCart);\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle on change of all input fields both in main & cart sections and update the storedata\r\n     * @param {object} e\r\n     * @param {string} fieldName\r\n     * @param {string} id\r\n    */\r\n    const handleChange = (e, fieldName, id) => {\r\n        let updatedFishes = storeData.inventory;\r\n        let updatedCart = storeData.cart;\r\n\r\n        updatedFishes.forEach((item, index) => {\r\n            if (item.id === id) {\r\n                switch (fieldName) {\r\n                    case 'name':\r\n                        updatedFishes[index].name = e.target.value;\r\n                        break;\r\n                    case 'description':\r\n                        updatedFishes[index].description = e.target.value;\r\n                        break;\r\n                    case 'price':\r\n                        updatedFishes[index].price = e.target.value;\r\n                        break;\r\n                    case 'option':\r\n                        updatedFishes[index].status = e;\r\n                        break;\r\n                    case 'file':\r\n                        updatedFishes[index].imagePath = e;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n        updatedCart.forEach((item, index) => {\r\n            if (item.id === id) {\r\n                switch (fieldName) {\r\n                    case 'name':\r\n                        updatedCart[index].name = e.target.value;\r\n                        break;\r\n                    case 'price':\r\n                        updatedCart[index].price = e.target.value;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n        updateStoreData(updatedFishes, updatedCart);\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @desc handle save on click of save button and update storedata\r\n     * @param {object} newFish\r\n    */\r\n    const updateInventory = (newFish) => {\r\n        let updatedFishes = storeData.inventory;\r\n        let updatedCart = storeData.cart;\r\n\r\n        if (updatedFishes.length) {\r\n            for (let i = 0; i <= updatedFishes.length; i++) {\r\n                let newId = 'fish' + String(i + 1);\r\n                let isNewFish = true;\r\n\r\n                updatedFishes.forEach((item) => {\r\n                    if (item.id === newId) {\r\n                        isNewFish = false;\r\n                    }\r\n                });\r\n\r\n                if (isNewFish) {\r\n                    newFish[0].id = newId;\r\n                }\r\n            };\r\n            updatedFishes = [...newFish, ...updatedFishes];\r\n\r\n            updateStoreData(updatedFishes, updatedCart);\r\n        }\r\n        else {\r\n            newFish[0].id = 'fish1';\r\n            updatedFishes = newFish;\r\n\r\n            updateStoreData(updatedFishes, updatedCart);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='flex home-bg'>\r\n            <section className='w-5/12 order border-theme-red border-r-2'>\r\n                <FishMarket\r\n                    storeData={storeData}\r\n                    handleOrder={handleOrder}\r\n                    updateStoreData={updateStoreData}\r\n                    noDataError={noDataError}\r\n                />\r\n            </section>\r\n            <section className='w-2/12 cart'>\r\n                <Cart\r\n                    storeData={storeData}\r\n                    noDataError={noDataError}\r\n                />\r\n            </section>\r\n            <section className='w-5/12 inventory border-theme-red border-l-2'>\r\n                <Inventory\r\n                    storeData={storeData}\r\n                    logout={handleLogout}\r\n                    onClickLoadFishes={loadSampleData}\r\n                    fold={fold}\r\n                    unfold={unfold}\r\n                    handleChange={(e, val, id) => handleChange(e, val, id)}\r\n                    updateInventory={updateInventory}\r\n                    removeFish={(id) => removeFish(id)}\r\n                    noDataError={noDataError}\r\n                />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FishStore;","import React, { useState } from 'react';\r\n\r\nimport Button from '../atoms/Button';\r\nimport CartItem from '../atoms/CartItem';\r\nimport Counters from '../atoms/Counters';\r\nimport InputFile from '../atoms/InputFile';\r\n\r\nimport Dropdown from '../molecules/Dropdown';\r\n\r\nimport FishCard from '../organisms/FishCard';\r\nimport FishForm from '../organisms/FishForm';\r\n\r\n/**\r\n * @function\r\n * @desc StyleGuide page\r\n*/\r\nconst StyleGuide = () => {\r\n    const [cartData,] = useState({ name: 'fish1', quantity: 2, price: 12.34 });\r\n    const [sample, setSample] = useState('');\r\n\r\n    const handleItemSelected = (fieldValue, fieldName) => {\r\n        if (fieldName === 'sample') {\r\n            setSample(fieldValue);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className='mb-4 border-b'>\r\n                <h2 className='text-6xl font-bold'>Fonts</h2>\r\n                <div className='mb-2'>\r\n                    <h2 className='text-2xl'>Archistico Bold Font</h2>\r\n                    <p className='font-archistico-bold text-4xl'>abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ</p>\r\n                </div>\r\n                <div className='mb-2'>\r\n                    <h2 className='text-2xl'>Archistico Simple Font</h2>\r\n                    <p className='font-archistico-simple text-4xl'>abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ</p>\r\n                </div>\r\n                <div className='mb-2'>\r\n                    <h2 className='text-2xl'>Carrinady Font</h2>\r\n                    <p className='font-carrinady text-4xl'>abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ</p>\r\n                </div>\r\n                <div className='mb-2'>\r\n                    <h2 className='text-2xl'>Phosphate Inline Font</h2>\r\n                    <p className='font-phosphate-inline text-4xl'>abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ</p>\r\n                </div>\r\n                <div className='mb-2'>\r\n                    <h2 className='text-2xl'>Proxima Nova Alt Regular Font</h2>\r\n                    <p className='font-proxima-nova-alt text-4xl'>abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ</p>\r\n                </div>\r\n                <div className='mb-2'>\r\n                    <h2 className='text-2xl'>Proxima Nova Regular Font</h2>\r\n                    <p className='font-proxima-nova text-4xl'>abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ</p>\r\n                </div>\r\n            </section>\r\n            <section className='mb-4 border-b'>\r\n                <h2 className='text-2xl font-bold'>Icons</h2>\r\n                <div className=''>\r\n                    <span className='flaticon-home'></span>\r\n                    <span className='flaticon-shopping-cart'></span>\r\n                    <span className='flaticon-add'></span>\r\n                    <span className='flaticon-minus'></span>\r\n                    <span className='flaticon-dollar'></span>\r\n                    <span className='flaticon-google'></span>\r\n                    <span className='flaticon-image'></span>\r\n                    <span className='flaticon-chevron-upwards-arrow'></span>\r\n                    <span className='flaticon-down-chevron'></span>\r\n                    <span className='flaticon-fish'></span>\r\n                </div>\r\n            </section>\r\n            <section className='mb-4 border-b'>\r\n                <h2 className='text-2xl font-bold'>Atoms</h2>\r\n                <div className=''>\r\n                    <Button\r\n                        text='save fish'\r\n                        styleClasses='bg-green-600 text-xs'\r\n                    />\r\n                    <Button\r\n                        text='remove fish'\r\n                        styleClasses='bg-red-600 text-xs'\r\n                    />\r\n                    <Button\r\n                        text='order'\r\n                        styleClasses='bg-black text-sm'\r\n                    />\r\n                    <div className='w-64'>\r\n                        <CartItem cartData={cartData} />\r\n                    </div>\r\n                    <Counters quantity={1} />\r\n                    <InputFile />\r\n\r\n                </div>\r\n            </section>\r\n            <section className='mb-4 border-b'>\r\n                <h2 className='text-2xl font-bold'>Molecules</h2>\r\n                <div className=''>\r\n                    <Dropdown\r\n                        value={sample}\r\n                        title=\"Select option\"\r\n                        list={['fresh', 'sold out']}\r\n                        onSelectItem={(e) => { handleItemSelected(e, 'sample') }}\r\n                        listWidth=\"w-40\"\r\n                        width=\"w-32\"\r\n                    />\r\n                </div>\r\n            </section>\r\n            <section className='mb-4 border-b'>\r\n                <h2 className='text-2xl font-bold'>Organisms</h2>\r\n                <div className='flex'>\r\n                    <div className='w-1/3 mr-2'>\r\n                        <FishCard />\r\n                    </div>\r\n                    <div className='w-2/3'>\r\n                        <FishForm />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StyleGuide;","import React from 'react';\r\n\r\n/**\r\n * @function\r\n * @desc Page not found Component\r\n * @param {object} props \r\n*/\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div className='flex items-center justify-center min-h-screen'>\r\n            <h1 className='text-4xl text-blue-700 font-bold'>Page Not found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\n\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport StorePicker from './components/pages/StorePicker';\r\nimport FishStore from './components/pages/FishStore';\r\nimport StyleGuide from './components/pages/StyleGuide';\r\nimport PageNotFound from './components/pages/PageNotFound';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path='/' component={StorePicker} />\r\n        <Route path='/store/:storename' component={FishStore} />\r\n        <Route path='/styleguide' component={StyleGuide} />\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './assets/styles/main.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}